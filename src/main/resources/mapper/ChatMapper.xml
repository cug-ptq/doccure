<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.doccure.dao.ChatMessageDao">
<!--    ListInfo-->
    <insert id="insertChatListInfo" parameterType="com.example.doccure.entity.ChatListInfo" useGeneratedKeys="true" keyProperty="id">
        insert into chat_list (from_email, to_email, status, unread_num)
        values (#{from_email},#{to_email},#{status},#{unread_num});
    </insert>

    <select id="getAllToByToE" parameterType="String" resultType="com.example.doccure.entity.ChatListInfo">
        select *
        from chat_list where to_email=#{to_email};
    </select>

    <select id="getAllToByFormE" parameterType="String" resultType="com.example.doccure.entity.ChatListInfo">
        select *
        from chat_list where from_email=#{from_email};
    </select>

    <select id="getChatListInfoByFTE" parameterType="String" resultType="com.example.doccure.entity.ChatListInfo">
        select *
        from chat_list where from_email=#{from_email} and to_email=#{to_email};
    </select>

    <delete id="deleteChatListInfoByFTE" parameterType="String">
        delete
        from chat_list
        where from_email=#{from_email} and to_email=#{to_email};
    </delete>

    <update id="updateUnReadNum">
        update chat_list
        <set>
            <if test="unread_num!=null">unread_num=unread_num+#{unread_num}</if>
        </set>
        where from_email=#{from_email} and to_email=#{to_email};
    </update>

    <update id="updateUnReadNumToZero">
        update chat_list
        <set>
            <if test="unread_num!=null">unread_num=#{unread_num}</if>
        </set>
        where from_email=#{from_email} and to_email=#{to_email};
    </update>

<!--    Message-->
    <insert id="insertChatMessage" parameterType="com.example.doccure.entity.ChatMessage" useGeneratedKeys="true" keyProperty="id">
        insert into chat_data (from_email, to_email, content, time, is_last)
        values (#{from_email},#{to_email},#{content},#{time},#{is_last});
    </insert>

    <select id="getAllChatMessageByFTE" parameterType="String" resultType="com.example.doccure.entity.ChatMessage">
        select *
        from chat_data where from_email=#{from_email} and to_email=#{to_email}
    </select>

    <select id="getLastChatMessageByFTE_IsLast" resultType="com.example.doccure.entity.ChatMessage">
        select *
        from chat_data where from_email=#{from_email} and to_email=#{to_email} and is_last=#{is_last}
    </select>

    <select id="getChatMessageById" parameterType="int" resultType="com.example.doccure.entity.ChatMessage">
        select *
        from chat_data where id=#{id}
    </select>

    <select id="getChatMessageByBETime" parameterType="String" resultType="com.example.doccure.entity.ChatMessage">
        select *
        from chat_data where from_email=#{from_email} and to_email=#{to_email} and time between #{beginTime} and #{endTime}
    </select>

    <delete id="deleteChatMessageByID" parameterType="int">
        delete
        from chat_data
        where id=#{id}
    </delete>

    <update id="updateIsLastByIdIsLast" parameterType="int">
        update chat_data
        <set>
            <if test="is_last!=null">is_last=#{is_last}</if>
        </set>
        where id=#{id}
    </update>

    <update id="updateIsLastByFTEIsLast">
        update chat_data
        <set>
            <if test="is_last!=null">is_last=#{is_last}</if>
        </set>
        where from_email=#{from_email} and to_email=#{to_email}
    </update>

    <select id="sumUnReadByFE" parameterType="String" resultType="int">
        select coalesce(sum(unread_num),0) from chat_list
        where unread_num &lt;&gt;0 and from_email=#{from_email}
    </select>

</mapper>